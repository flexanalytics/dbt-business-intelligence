
# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'dbt_business_intelligence'
version: '1.7.0'
config-version: 2

require-dbt-version: ">=1.7.0"

# This setting configures which "profile" dbt uses for this project.
profile: 'dbt_business_intelligence'

# These configurations specify where dbt should look for different types of files.
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

target-path: "target"  # directory which will store compiled SQL files
clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"

vars:
  company_name: 'Bigstore Enterprises'
  company_start_date: '2019-01-01'
  "dbt_observability:enabled": true
  "dbt_observability:column_stats_type": "DOC"
  "dbt_observability:column_values_max": 10
  "dbt_observability:path": "models/marts/" # must be in the form of "dbt_observability_path": "path/subpath/" or "dbt_observability_path":
  "dbt_observability:materialization": "table" # must be one of "table", "view", "incremental", "ephemeral" or "dbt_observability:materialization":


# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/ directory
# as tables. These settings can be overridden in the individual model files
# using the `{{ config(...) }}` macro.
models:
  dbt_business_intelligence:
    # Config indicated by + and applies to all files under models/example/
    +materialized: table
    +access: public
    staging:
      +schema: staging
      +materialized: view
  dbt_observability:
    +enabled: true
    +schema: observability
    sources:
      +enabled: true
  +grants:
    select: ['business_analyst_role']

seeds:
  dbt_business_intelligence:
    schema: staging # all seeds in this project will use the mapping schema by default

dispatch:
  - macro_namespace: dbt_utils
    search_order: ['tsql_utils', 'dbt_utils']
  - macro_namespace: dbt_date
    search_order: ['tsql_utils', 'dbt_date']

on-run-end:
  - "{{ dbt_observability.upload_results(results) }}"
